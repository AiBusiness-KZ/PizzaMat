"""
Main menu keyboards for bot navigation
"""

from aiogram.types import (
    ReplyKeyboardMarkup,
    KeyboardButton,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    WebAppInfo
)
from typing import List, Optional


def get_main_menu_keyboard(language: str = "uk") -> ReplyKeyboardMarkup:
    """
    Get main menu keyboard with common actions
    """
    texts = {
        "uk": {
            "menu": "üçï –ú–µ–Ω—é",
            "orders": "üì¶ –ú–æ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è",
            "support": "üí¨ –ü—ñ–¥—Ç—Ä–∏–º–∫–∞",
            "settings": "‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è"
        },
        "en": {
            "menu": "üçï Menu",
            "orders": "üì¶ My Orders",
            "support": "üí¨ Support",
            "settings": "‚öôÔ∏è Settings"
        },
        "ru": {
            "menu": "üçï –ú–µ–Ω—é",
            "orders": "üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã",
            "support": "üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞",
            "settings": "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"
        }
    }

    t = texts.get(language, texts["uk"])

    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text=t["menu"])],
            [KeyboardButton(text=t["orders"]), KeyboardButton(text=t["support"])],
            [KeyboardButton(text=t["settings"])]
        ],
        resize_keyboard=True,
        one_time_keyboard=False
    )

    return keyboard


def get_phone_keyboard(language: str = "uk") -> ReplyKeyboardMarkup:
    """
    Get keyboard for phone number sharing
    """
    texts = {
        "uk": "üì± –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –Ω–æ–º–µ—Ä–æ–º",
        "en": "üì± Share phone number",
        "ru": "üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º"
    }

    text = texts.get(language, texts["uk"])

    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text=text, request_contact=True)]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )

    return keyboard


def get_webapp_keyboard(webapp_url: str, language: str = "uk") -> InlineKeyboardMarkup:
    """
    Get keyboard with WebApp button to open menu
    """
    texts = {
        "uk": "üçï –í—ñ–¥–∫—Ä–∏—Ç–∏ –º–µ–Ω—é",
        "en": "üçï Open menu",
        "ru": "üçï –û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é"
    }

    text = texts.get(language, texts["uk"])

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(
                text=text,
                web_app=WebAppInfo(url=webapp_url)
            )]
        ]
    )

    return keyboard


def get_cities_keyboard(cities: List[dict], language: str = "uk") -> InlineKeyboardMarkup:
    """
    Get keyboard for city selection
    """
    buttons = []

    for city in cities:
        buttons.append([InlineKeyboardButton(
            text=f"üìç {city['name']}",
            callback_data=f"city_{city['id']}"
        )])

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def get_locations_keyboard(locations: List[dict], language: str = "uk") -> InlineKeyboardMarkup:
    """
    Get keyboard for pickup location selection
    """
    buttons = []

    for location in locations:
        buttons.append([InlineKeyboardButton(
            text=f"üìç {location['name']}",
            callback_data=f"location_{location['id']}"
        )])

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def get_order_actions_keyboard(order_id: int, language: str = "uk") -> InlineKeyboardMarkup:
    """
    Get keyboard for order actions (upload receipt, cancel, etc.)
    """
    texts = {
        "uk": {
            "upload_receipt": "üì∏ –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —á–µ–∫",
            "cancel": "‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è",
            "view_details": "üìã –î–µ—Ç–∞–ª—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è"
        },
        "en": {
            "upload_receipt": "üì∏ Upload receipt",
            "cancel": "‚ùå Cancel order",
            "view_details": "üìã Order details"
        },
        "ru": {
            "upload_receipt": "üì∏ –ó–∞–≥—Ä—É–∑–∏—Ç—å —á–µ–∫",
            "cancel": "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑",
            "view_details": "üìã –î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞"
        }
    }

    t = texts.get(language, texts["uk"])

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(
                text=t["upload_receipt"],
                callback_data=f"upload_receipt_{order_id}"
            )],
            [InlineKeyboardButton(
                text=t["view_details"],
                callback_data=f"order_details_{order_id}"
            )],
            [InlineKeyboardButton(
                text=t["cancel"],
                callback_data=f"cancel_order_{order_id}"
            )]
        ]
    )

    return keyboard


def get_manager_order_keyboard(order_id: int, language: str = "uk") -> InlineKeyboardMarkup:
    """
    Get keyboard for manager to confirm/reject order
    """
    texts = {
        "uk": {
            "confirm": "‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏",
            "reject": "‚ùå –í—ñ–¥—Ö–∏–ª–∏—Ç–∏"
        },
        "en": {
            "confirm": "‚úÖ Confirm",
            "reject": "‚ùå Reject"
        },
        "ru": {
            "confirm": "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",
            "reject": "‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å"
        }
    }

    t = texts.get(language, texts["uk"])

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text=t["confirm"],
                    callback_data=f"manager_confirm_{order_id}"
                ),
                InlineKeyboardButton(
                    text=t["reject"],
                    callback_data=f"manager_reject_{order_id}"
                )
            ]
        ]
    )

    return keyboard


def get_language_keyboard() -> InlineKeyboardMarkup:
    """
    Get keyboard for language selection
    """
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="üá∫üá¶ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞", callback_data="lang_uk"),
                InlineKeyboardButton(text="üá¨üáß English", callback_data="lang_en")
            ],
            [
                InlineKeyboardButton(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π", callback_data="lang_ru")
            ]
        ]
    )

    return keyboard


def get_cancel_keyboard(language: str = "uk") -> ReplyKeyboardMarkup:
    """
    Get keyboard with cancel button
    """
    texts = {
        "uk": "‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏",
        "en": "‚ùå Cancel",
        "ru": "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å"
    }

    text = texts.get(language, texts["uk"])

    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text=text)]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )

    return keyboard
