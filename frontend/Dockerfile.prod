# Build stage
FROM node:20-alpine AS builder

WORKDIR /app

# Declare build arguments
ARG VITE_API_URL
ARG NODE_ENV=production

# Copy package files
COPY package*.json ./

# Install ALL dependencies INCLUDING devDependencies
RUN npm install --production=false

# Set environment variables
ENV VITE_API_URL=$VITE_API_URL
ENV NODE_ENV=$NODE_ENV

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Production stage - use nginx instead of serve
FROM nginx:alpine

# Copy built files to nginx html directory
COPY --from=builder /app/dist /usr/share/nginx/html

# Create nginx config with proper logging
RUN echo 'server { \n\
    listen 80; \n\
    server_name _; \n\
    root /usr/share/nginx/html; \n\
    index index.html; \n\
    \n\
    # Enable access and error logs \n\
    access_log /var/log/nginx/access.log; \n\
    error_log /var/log/nginx/error.log debug; \n\
    \n\
    location / { \n\
        try_files $uri $uri/ /index.html; \n\
    } \n\
    \n\
    # Health check endpoint \n\
    location /health { \n\
        access_log off; \n\
        return 200 "healthy\n"; \n\
        add_header Content-Type text/plain; \n\
    } \n\
}' > /etc/nginx/conf.d/default.conf

# Create symlinks for logs to stdout/stderr
RUN ln -sf /dev/stdout /var/log/nginx/access.log \
    && ln -sf /dev/stderr /var/log/nginx/error.log

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]
