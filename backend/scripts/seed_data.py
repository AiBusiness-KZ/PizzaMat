"""
Script to seed the database with test data
"""
import asyncio
import sys
from pathlib import Path

# Add parent directory to path
sys.path.insert(0, str(Path(__file__).parent.parent))

from sqlalchemy.ext.asyncio import AsyncSession
from app.database import async_session_maker, init_db
from app.models.product import Category, Product
from app.models.location import Location


async def seed_database():
    """Seed database with test data"""
    print("Starting database seeding...")
    
    await init_db()
    
    async with async_session_maker() as session:
        # Add categories
        categories = [
            Category(
                category_id="pizza",
                name="–ü—ñ—Ü–∞",
                sort_order=1,
                is_active=True
            ),
            Category(
                category_id="drinks",
                name="–ù–∞–ø–æ—ó",
                sort_order=2,
                is_active=True
            ),
            Category(
                category_id="snacks",
                name="–ó–∞–∫—É—Å–∫–∏",
                sort_order=3,
                is_active=True
            ),
        ]
        session.add_all(categories)
        await session.commit()
        print(f"‚úÖ Added {len(categories)} categories")
        
        # Add products
        products = [
            # Pizzas
            Product(
                product_id="margarita",
                category_id="pizza",
                name="–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞",
                description="–ö–ª–∞—Å–∏—á–Ω–∞ –ø—ñ—Ü–∞ –∑ —Ç–æ–º–∞—Ç–∞–º–∏ —Ç–∞ –º–æ—Ü–∞—Ä–µ–ª–æ—é",
                base_price=120.0,
                options=[
                    {"type": "–†–æ–∑–º—ñ—Ä", "name": "–ú–∞–ª–∞ (25—Å–º)", "price_modifier": 0},
                    {"type": "–†–æ–∑–º—ñ—Ä", "name": "–°–µ—Ä–µ–¥–Ω—è (30—Å–º)", "price_modifier": 40},
                    {"type": "–†–æ–∑–º—ñ—Ä", "name": "–í–µ–ª–∏–∫–∞ (35—Å–º)", "price_modifier": 80},
                    {"type": "–î–æ–±–∞–≤–∫–∞", "name": "–ü–æ–¥–≤—ñ–π–Ω–∏–π —Å–∏—Ä", "price_modifier": 30},
                    {"type": "–î–æ–±–∞–≤–∫–∞", "name": "–ì—Ä–∏–±–∏", "price_modifier": 20},
                ],
                sort_order=1,
                is_active=True
            ),
            Product(
                product_id="pepperoni",
                category_id="pizza",
                name="–ü–µ–ø–µ—Ä–æ–Ω—ñ",
                description="–ü—ñ—Ü–∞ –∑ –ø—ñ–∫–∞–Ω—Ç–Ω–æ—é —Å–∞–ª—è–º—ñ –ø–µ–ø–µ—Ä–æ–Ω—ñ",
                base_price=150.0,
                options=[
                    {"type": "–†–æ–∑–º—ñ—Ä", "name": "–ú–∞–ª–∞ (25—Å–º)", "price_modifier": 0},
                    {"type": "–†–æ–∑–º—ñ—Ä", "name": "–°–µ—Ä–µ–¥–Ω—è (30—Å–º)", "price_modifier": 40},
                    {"type": "–†–æ–∑–º—ñ—Ä", "name": "–í–µ–ª–∏–∫–∞ (35—Å–º)", "price_modifier": 80},
                ],
                sort_order=2,
                is_active=True
            ),
            Product(
                product_id="quattro-formaggi",
                category_id="pizza",
                name="–ß–æ—Ç–∏—Ä–∏ —Å–∏—Ä–∏",
                description="–ü—ñ—Ü–∞ –∑ —á–æ—Ç–∏—Ä–º–∞ –≤–∏–¥–∞–º–∏ —Å–∏—Ä—É",
                base_price=170.0,
                options=[
                    {"type": "–†–æ–∑–º—ñ—Ä", "name": "–ú–∞–ª–∞ (25—Å–º)", "price_modifier": 0},
                    {"type": "–†–æ–∑–º—ñ—Ä", "name": "–°–µ—Ä–µ–¥–Ω—è (30—Å–º)", "price_modifier": 40},
                    {"type": "–†–æ–∑–º—ñ—Ä", "name": "–í–µ–ª–∏–∫–∞ (35—Å–º)", "price_modifier": 80},
                ],
                sort_order=3,
                is_active=True
            ),
            # Drinks
            Product(
                product_id="cola",
                category_id="drinks",
                name="Coca-Cola",
                description="–ö–ª–∞—Å–∏—á–Ω–∞ –∫–æ–∫–∞-–∫–æ–ª–∞",
                base_price=30.0,
                options=[
                    {"type": "–û–±'—î–º", "name": "0.33–ª", "price_modifier": 0},
                    {"type": "–û–±'—î–º", "name": "0.5–ª", "price_modifier": 10},
                ],
                sort_order=1,
                is_active=True
            ),
            Product(
                product_id="water",
                category_id="drinks",
                name="–í–æ–¥–∞ –º—ñ–Ω–µ—Ä–∞–ª—å–Ω–∞",
                description="–ú—ñ–Ω–µ—Ä–∞–ª—å–Ω–∞ –≤–æ–¥–∞",
                base_price=20.0,
                options=[
                    {"type": "–û–±'—î–º", "name": "0.5–ª", "price_modifier": 0},
                    {"type": "–û–±'—î–º", "name": "1–ª", "price_modifier": 10},
                ],
                sort_order=2,
                is_active=True
            ),
        ]
        session.add_all(products)
        await session.commit()
        print(f"‚úÖ Added {len(products)} products")
        
        # Add locations
        locations = [
            Location(
                location_id="kyiv-center",
                city="–ö–∏—ó–≤",
                name="–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∏–π –≤–æ–∫–∑–∞–ª",
                address="–≤—É–ª. –í–æ–∫–∑–∞–ª—å–Ω–∞, 1",
                is_active=True
            ),
            Location(
                location_id="lviv-market",
                city="–õ—å–≤—ñ–≤",
                name="–†–∏–Ω–æ–∫ –ì–∞–ª–∏—Ü—å–∫–∏–π",
                address="–ø–ª. –†–∏–Ω–æ–∫, 10",
                is_active=True
            ),
            Location(
                location_id="odesa-beach",
                city="–û–¥–µ—Å–∞",
                name="–ê—Ä–∫–∞–¥—ñ—è",
                address="–ê—Ä–∫–∞–¥—ñ—è, –ø–ª—è–∂",
                is_active=True
            ),
        ]
        session.add_all(locations)
        await session.commit()
        print(f"‚úÖ Added {len(locations)} locations")
    
    print("\nüéâ Database seeding completed successfully!")
    print("\nYou can now:")
    print("  ‚Ä¢ View categories at http://localhost:8000/api/categories")
    print("  ‚Ä¢ View products at http://localhost:8000/api/products")
    print("  ‚Ä¢ View locations at http://localhost:8000/api/pickup-locations")


if __name__ == "__main__":
    asyncio.run(seed_database())
