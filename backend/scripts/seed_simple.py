"""
Simplified seed script - add test data directly
"""
import asyncio
import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent.parent))

from sqlalchemy import text
from app.database import async_session_maker


async def seed_database():
    """Seed database with test data using raw SQL"""
    print("Starting database seeding...")
    
    async with async_session_maker() as session:
        # Clear existing data
        await session.execute(text("TRUNCATE categories, products, locations RESTART IDENTITY CASCADE"))
        
        # Add categories
        await session.execute(text("""
            INSERT INTO categories (category_id, name, sort_order, is_active) VALUES
            ('pizza', '–ü—ñ—Ü–∞', 1, true),
            ('drinks', '–ù–∞–ø–æ—ó', 2, true),
            ('snacks', '–ó–∞–∫—É—Å–∫–∏', 3, true)
        """))
        print("‚úÖ Added categories")
        
        # Add products
        await session.execute(text("""
            INSERT INTO products (product_id, category_id, name, description, base_price, options, sort_order, is_active) VALUES
            ('margarita', 'pizza', '–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞', '–ö–ª–∞—Å–∏—á–Ω–∞ –ø—ñ—Ü–∞ –∑ —Ç–æ–º–∞—Ç–∞–º–∏ —Ç–∞ –º–æ—Ü–∞—Ä–µ–ª–æ—é', 120.0, 
             '[{"type": "–†–æ–∑–º—ñ—Ä", "name": "–ú–∞–ª–∞ (25—Å–º)", "price_modifier": 0}, 
               {"type": "–†–æ–∑–º—ñ—Ä", "name": "–°–µ—Ä–µ–¥–Ω—è (30—Å–º)", "price_modifier": 40},
               {"type": "–†–æ–∑–º—ñ—Ä", "name": "–í–µ–ª–∏–∫–∞ (35—Å–º)", "price_modifier": 80},
               {"type": "–î–æ–±–∞–≤–∫–∞", "name": "–ü–æ–¥–≤—ñ–π–Ω–∏–π —Å–∏—Ä", "price_modifier": 30}]'::jsonb, 
             1, true),
            ('pepperoni', 'pizza', '–ü–µ–ø–µ—Ä–æ–Ω—ñ', '–ü—ñ—Ü–∞ –∑ –ø—ñ–∫–∞–Ω—Ç–Ω–æ—é —Å–∞–ª—è–º—ñ –ø–µ–ø–µ—Ä–æ–Ω—ñ', 150.0,
             '[{"type": "–†–æ–∑–º—ñ—Ä", "name": "–ú–∞–ª–∞ (25—Å–º)", "price_modifier": 0},
               {"type": "–†–æ–∑–º—ñ—Ä", "name": "–°–µ—Ä–µ–¥–Ω—è (30—Å–º)", "price_modifier": 40},
               {"type": "–†–æ–∑–º—ñ—Ä", "name": "–í–µ–ª–∏–∫–∞ (35—Å–º)", "price_modifier": 80}]'::jsonb,
             2, true),
            ('quattro-formaggi', 'pizza', '–ß–æ—Ç–∏—Ä–∏ —Å–∏—Ä–∏', '–ü—ñ—Ü–∞ –∑ —á–æ—Ç–∏—Ä–º–∞ –≤–∏–¥–∞–º–∏ —Å–∏—Ä—É', 170.0,
             '[{"type": "–†–æ–∑–º—ñ—Ä", "name": "–ú–∞–ª–∞ (25—Å–º)", "price_modifier": 0},
               {"type": "–†–æ–∑–º—ñ—Ä", "name": "–°–µ—Ä–µ–¥–Ω—è (30—Å–º)", "price_modifier": 40},
               {"type": "–†–æ–∑–º—ñ—Ä", "name": "–í–µ–ª–∏–∫–∞ (35—Å–º)", "price_modifier": 80}]'::jsonb,
             3, true),
            ('cola', 'drinks', 'Coca-Cola', '–ö–ª–∞—Å–∏—á–Ω–∞ –∫–æ–∫–∞-–∫–æ–ª–∞', 30.0,
             '[{"type": "–û–±''—î–º", "name": "0.33–ª", "price_modifier": 0},
               {"type": "–û–±''—î–º", "name": "0.5–ª", "price_modifier": 10}]'::jsonb,
             1, true),
            ('water', 'drinks', '–í–æ–¥–∞ –º—ñ–Ω–µ—Ä–∞–ª—å–Ω–∞', '–ú—ñ–Ω–µ—Ä–∞–ª—å–Ω–∞ –≤–æ–¥–∞', 20.0,
             '[{"type": "–û–±''—î–º", "name": "0.5–ª", "price_modifier": 0},
               {"type": "–û–±''—î–º", "name": "1–ª", "price_modifier": 10}]'::jsonb,
             2, true)
        """))
        print("‚úÖ Added products")
        
        # Add locations
        await session.execute(text("""
            INSERT INTO locations (location_id, city, name, address, is_active) VALUES
            ('kyiv-center', '–ö–∏—ó–≤', '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∏–π –≤–æ–∫–∑–∞–ª', '–≤—É–ª. –í–æ–∫–∑–∞–ª—å–Ω–∞, 1', true),
            ('lviv-market', '–õ—å–≤—ñ–≤', '–†–∏–Ω–æ–∫ –ì–∞–ª–∏—Ü—å–∫–∏–π', '–ø–ª. –†–∏–Ω–æ–∫, 10', true),
            ('odesa-beach', '–û–¥–µ—Å–∞', '–ê—Ä–∫–∞–¥—ñ—è', '–ê—Ä–∫–∞–¥—ñ—è, –ø–ª—è–∂', true)
        """))
        print("‚úÖ Added locations")
        
        await session.commit()
    
    print("\nüéâ Database seeding completed successfully!")
    print("\nYou can now:")
    print("  ‚Ä¢ View categories at http://localhost:8000/api/categories")
    print("  ‚Ä¢ View products at http://localhost:8000/api/products")
    print("  ‚Ä¢ View locations at http://localhost:8000/api/pickup-locations")


if __name__ == "__main__":
    asyncio.run(seed_database())
